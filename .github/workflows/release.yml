name: CreateReleaseDraft

# Prepares the files for publishing and creates a release draft which then can be manually edited and published. Publishing will trigger the release action "publish"

permissions:
  contents: write
on:
  # Manual trigger
  workflow_dispatch:

jobs:
  package_and_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4.6.0
        with:
          python-version: "^3.6"

      # Create archive and set env vars and output for the next steps
      # should fail completely if something is wrong
      - name: Package files
        id: package_files
        run: python ./.scripts/package.py

      - name: Generate AddOn Info
        id: addon_info
        run: |
          ARCHIVE=$(ls *.zip)
          NAME=${ARCHIVE%%-*}
          VERSION=${ARCHIVE#*-}
          VERSION=${VERSION%.*}
          echo "PACKAGE_ARCHIVE=$ARCHIVE" >> $GITHUB_OUTPUT
          echo "PACKAGE_ADDON_NAME=$NAME" >> $GITHUB_OUTPUT
          echo "PACKAGE_ADDON_VERSION=$VERSION" >> $GITHUB_OUTPUT

      # todo: generate description from commits
      - name: Generate Description
        run: echo generate description

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          PACKAGE_ADDON_ARCHIVE: ${{ steps.addon_info.outputs.PACKAGE_ADDON_ARCHIVE }}
          PACKAGE_ADDON_NAME: ${{ steps.addon_info.outputs.PACKAGE_ADDON_NAME }}
          PACKAGE_ADDON_VERSION: ${{ steps.addon_info.outputs.PACKAGE_ADDON_VERSION }}
        with:
          tag_name: ${{ steps.addon_info.outputs.PACKAGE_ADDON_VERSION }}
          body: bla
          files: ${{ steps.addon_info.outputs.PACKAGE_ADDON_ARCHIVE }}
          target_commitish: feature/actions
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          prerelease: false
          generate_release_notes: true
