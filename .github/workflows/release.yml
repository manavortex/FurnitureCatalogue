name: CreateRelease

# Prepares the files for publishing and creates a pre-release from the current version of the branch. The release then can be manually edited and published. Publishing will trigger the release action in "publish.yml".

# todo-maybe: add possibility to release older versions for the archives.

permissions:
  contents: write
on:
  # Manual trigger
  workflow_dispatch:

jobs:
  package_and_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4.6.0
        with:
          python-version: "^3.6"

      # Create archive and set env vars and output for the next steps
      # should fail completely if something goes wrong
      - name: Package Files
        id: package_files
        run: python ./.scripts/package.py

      - name: Generate AddOn Info
        id: addon_info
        run: |
          ARCHIVE="$(ls *.zip)"
          NAME="${ARCHIVE%%-*}"
          VERSION="${ARCHIVE#*-}"
          VERSION="${VERSION%.*}"
          echo "PACKAGE_ARCHIVE=$ARCHIVE" >> $GITHUB_OUTPUT
          echo "PACKAGE_ADDON_NAME=$NAME" >> $GITHUB_OUTPUT
          echo "PACKAGE_ADDON_VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Generate Release Notes
        id: generate_notes
        run: |
          VERSION="${{ steps.addon_info.outputs.PACKAGE_ADDON_VERSION }}"
          TOADY="$(date --iso-8601)"
          COMMENT1="[//]: # (⬆️⬆️⬆️ ABOVE WILL BE SENT TO ESOUI CHANGELOG ⬆️⬆️⬆️)"
          COMMENT2="[//]: # (CLEAR THE TOP PART OF THIS NOTE IF YOU DON'T WANT TO ADD INFO TO THE CHANGE LOG)"
          COMMENT3="[//]: # (⬇️⬇️⬇️ STUFF BELOW WONT BE SENT TO ESOUI ⬇️⬇️⬇️)"
          NOTES="$VERSION ($TOADY)\n - changes\n\n$COMMENT1\n$COMMENT2\n$COMMENT3\n"
          echo "NOTES=$NOTES" >> $GITHUB_OUTPUT

      # Delete existing tag, because it could point to an older commit, causing release and publish mismatches
      - name: Delete Existing Tag
        run: |
          git push origin ":refs/tags/${{ steps.addon_info.outputs.PACKAGE_ADDON_VERSION }}" || true
          git tag --delete "${{ steps.addon_info.outputs.PACKAGE_ADDON_VERSION }}" || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        run: |
          gh release create "${{ steps.addon_info.outputs.PACKAGE_ADDON_VERSION }}" \
          "${{ steps.addon_info.outputs.PACKAGE_ARCHIVE }}" \
          --title "Version ${{ steps.addon_info.outputs.PACKAGE_ADDON_VERSION }}" \
          --notes "$(echo -e "${{ steps.generate_notes.outputs.NOTES }}")" \
          --target master \
          --generate-notes \
          --prerelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
