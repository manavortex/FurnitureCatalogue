-- This file is your playground!

--[[

	== How to use the data files ==

	To make maintenance as simple as possible, FurC holds all of its data in a list of nested tables. These tables will be translated into saved variable data once, and afterwards be used to generate the item descriptions and strings.
	Writing this was a pain in the ass, adding items is straightforward and only requires you to add a data entry to the right table.

	First level: All tables will be ordered by game version.

		== Game version constants are defined in "_Constants.lua" - this file gets loaded first ==

		This is part of any saved variable array and allows pre-filtering and faster lookup.
		Game version is also the filtering criterion for the "game version" dropdown in the UI.

	Second level: Item source (does not include crafted items)
		This is also part of any saved variable array: where to get an item - stolen, fished, dropped, crown store.

	Any extra levels:
		Will be used to generate item source strings. See FurCDatabaseQuery.lua

	- Wait, but how do crafted items get into this table?

		There are three ways the AddOn finds crafted/craftable items:
			- Recipes:
				See "data/Recipes.lua" - just stuff the item id into the table with the correspnding game version

			- Character knowledge:
				Will be scanned at login or if you press any of the GUI buttons. Any items that you know how to craft
				but that aren't part of the AddOn's base data will nonetheless be considered!

			- Recipes that are sold by Rolis or Faustina:
				See data/Rois.lua - these, too, are ordered by game version.
				They get special treatment because there's a price and requirements on the recipe.

		Any of those items will, during the initial scan, be autogenerated and added to the data in the saved variables -
		just as if there'd be a super lengthy list.

		== This function is called "FurC.ScanRecipes" and lives in "FurC_Data.lua". ==

]]

--[[

	== How to gather the data ==
	Download the AddOn "sidTools". Copy the _SidTools_Custom.lua to ..\SidTools\Custom.lua.
	Now do /reloadui, type /sidtools, and click on "itemViewer". That will show you All The Items in the game.
	After you've done that, type "/dumpfurniture" and do another /reloadui.
	You will now find two additional tables in ..\SavedVariables\SidTools.lua.
]]

-- add FURC_DEMO to _Constants.lua
-- After sirinsidiator's example, 'Custom.lua' gets loaded already, and will be loaded last.

-- If you don't do that, then your custom items will show up between the data of the most recent game version.
FURC_DEMO = FURC_DEMO or FURC_LATEST + 1

-- These entries can be auto-generated by sidTools, see "How to gather the data" above.
-- Adjust the formatting of the lines so that they look like below instead of
-- [152064] = "152064 -- Elsweyr Table, Low Square",
-- Please don't delete the comment - it is the only way to find any item in the files :D
-- Also, make sure to switch the client language to English first. We're being international here.
-- Recipe entries live in `data/Recipes.lua`.
FurC.Recipes[FURC_DEMO] = {
  152064, -- Elsweyr Table, Low Square,
  152065, -- Elsweyr Desk, Elegant Wooden,
}

-- the text for "this is a rumour item"
local rumourSource = GetString(SI_FURC_RUMOUR_SOURCE_ITEM)

-- this is a helper function that'll generate crown store price strings
local crownstoresource = GetString(SI_FURC_CROWNSTORESOURCE)
local function getCrownPrice(price)
  return string.format("%s (%u)", crownstoresource, price)
end

-- add one subtable per item source for filtering. Empty tables will be ignored when filtering.
FurC.MiscItemSources[FURC_DEMO] = {
  -- existing arrays will be (somewhat) updated.

  -- unconfirmed: Items that have been datamined, but not yet seen in-game.
  -- Will filter out stuff that can't be obtained. Removing this will drive the OCD people nuts!
  [FURC_RUMOUR] = {
    [4711] = "this is a demo item. It doesn't really exist and won't show up unless you filter for rumour items.",
  },

  -- Can be bought in the crown store. There's a utility function in data/MiscItemSources.lua to generate the price strings.
  -- It's local, but you can just copy it to your new file.
  [FURC_CROWN] = {
    [4811] = (getCrownPrice and getCrownPrice(9999)) or "oops", -- an item with the ID 4811 can be bought from crown store for 9999 crowns.
  },

  -- Anything that can be looted (legally - everything else goes into "FURC_JUSTICE"!).
  [FURC_DROP] = {
    [4911] = "this is a demo item that will show up under 'drop'",
  },

  -- anything that can be looted _illegally_ - Pickpocketing, cracking safeboxes, you name it. Will require laundering.
  [FURC_JUSTICE] = {
    [4712] = "You can steal this item somewhere. Where? No one but you will know, though!",
  },

  -- anything that can be fished. I treat these separately because some people are fine with grinding, not so fine with fishing.
  [FURC_FISHING] = {
    [4713] = "Something something",
  },
}

--[[ Achievement vendors

In the file data/AchievementVendors, you can see tables containing the achievement items.
	- The topmost entry is the game version for filtering
	- the second entry is the vendor's LOCATION
	- the third entry is the vendor's NAME
	If you have added your account name to `FurnitureCatalogue_DevUtility\00_startup.lua`, you will see 'Add data to textbox' in the content menu.
	Unfortunately, you need to look up the achievement ID for yourself, but at least the price will be autogenerated this way.
]]

-- To add your custom version to the dropdown, check FurC.DropdownData in startup.lua for pull requests.

FurC.DropdownData.ChoicesVersion[FURC_DEMO] = "this is my custom demo entry"
FurC.DropdownData.TooltipsVersion[FURC_DEMO] = "this is my custom demo entry tooltip"
FurC.UpdateDropdowns()

-- To define localization, just add an entry to locale/en.lua and to your own language's locale file, if necessary.
-- Not adding it to en.lua will most likely break the menu entry for any language but your own.

-- Please remember that these changes will only be used locally! If you want them included, send a letter to @BerylBones (preferrably on EU, although US will be read eventually as well), or find https://github.com/manavortex/FurnitureCatalogue and file a pull request.
